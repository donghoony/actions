name: Discord Notification on CI/CD

on:
  pull_request:
    types: [ opened, edited ] # PR Ïó¥Î†∏ÏùÑ Îïå ÏïàÎÇ¥ Î©îÏãúÏßÄ Ï†ÑÏÜ° -> Ï†úÎ™© Prefix ÌôïÏù∏
  pull_request_review:
    types: [ submitted ] # PR Î¶¨Î∑∞ ÏûëÏÑ± Ïãú Î©òÏÖò
  issues:
    types: [ opened, reopened ] # Ïù¥Ïäà Ïó¥Î¶¨Î©¥ Îã®Ïàú ÏïàÎÇ¥ Î©îÏãúÏßÄ Ï†ÑÏÜ°

env:
  "donghoony": "206298119661420544"
  "chysis": "243991296060948491"
  "badahertz52": "1165830186990850110"
  "ImxYJL": "859318944195149855"
  "Kimprodp": "1164111111193366580"
  "nayonsoso": "710749110570975243"
  "skylar1220": "971312723260493834"
  "soosoo22": "1162754699099906169"
  "backend": "1263405654534525051"
  "frontend": "1263406763382931467"

jobs:
  find-prefix:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.event_name == 'pull_request_review'
    steps:
      - name: Find prefix for PR title
        run: |
          echo "Finding prefix for PR title"
          PR_TITLE='${{ github.event.pull_request.title }}'
          PR_PREFIX=$(echo $PR_TITLE | cut -d ' ' -f1)
          if [ "$PR_PREFIX" = '[BE]' ]; then
            echo Backend PR Found!
            echo "PR_PREFIX=BE" >> $GITHUB_ENV
          elif [ "$PR_PREFIX" = '[FE]' ]; then
            echo Frontend PR Found!
            echo "PR_PREFIX=FE" >> $GITHUB_ENV
          fi
          echo PR Prefix : $PR_PREFIX
          echo PR Prefix on env : ${{ env.PR_PREFIX }}
  
  notify-on-pr:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Find prefix for PR title
        run: |
          echo "Finding prefix for PR title"
          PR_TITLE='${{ github.event.pull_request.title }}'
          PR_PREFIX=$(echo $PR_TITLE | cut -d ' ' -f1)
          if [ "$PR_PREFIX" = '[BE]' ]; then
            echo Backend PR Found!
            echo "PR_PREFIX=BE" >> $GITHUB_ENV
          elif [ "$PR_PREFIX" = '[FE]' ]; then
            echo Frontend PR Found!
            echo "PR_PREFIX=FE" >> $GITHUB_ENV
          fi
          echo PR Prefix : $PR_PREFIX
          echo PR Prefix on env : ${{ env.PR_PREFIX }}

      - name: Notify on PR
        if: env.PR_PREFIX == 'BE' || env.PR_PREFIX == 'FE'
        run: |
          echo "Notify on Discord"
          
          PR_URL='${{ github.event.pull_request.html_url }}'
          PR_TITLE='${{ github.event.pull_request.title }}'
          PR_AUTHOR='${{ github.event.sender.login }}'
          DISCORD_ID='${{ env[github.event.sender.login] }}'
          PR_BODY='${{ github.event.pull_request.body }}'
          if [ "${{ env.PR_PREFIX }}" = 'BE' ]; then
            NOTIFY_ID=${{ env.backend }}
            WEBHOOK_URL=${{ secrets.DISCORD_BE_PR_WEBHOOK_URL }}
          else
            NOTIFY_ID=${{ env.frontend }}
            WEBHOOK_URL=${{ secrets.DISCORD_FE_PR_WEBHOOK_URL }}
          fi
          
          JSON_FILE=$(mktemp)
          cat > $JSON_FILE <<EOF
          {
            "content": "<@&$NOTIFY_ID> ÏÉàÎ°úÏö¥ Pull RequestÍ∞Ä Îì±Î°ùÎêêÏñ¥Ïöî üî•",
            "embeds": [
              {
                "author": {
                    "name": "$PR_AUTHOR",
                    "icon_url": "https://github.com/$PR_AUTHOR.png"
                },
                "title": "$PR_TITLE",
                "url": "$PR_URL",
                "color": 16777215,
                "footer": {
                  "text": "2024-review-me"
                },
                "timestamp": "$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
              }
            ]
          }
          EOF
          cat $JSON_FILE
          curl -X POST -H 'Content-type: application/json' \
          --data @$JSON_FILE \
          $WEBHOOK_URL
          rm $JSON_FILE
  
      - name: notify-on-issue
        if: github.event.review.state == 'approved' || github.event.review.state == 'changes_requested'
        run: |
          echo "Notify on Discord"
          
          PR_URL='${{ github.event.pull_request.html_url }}'
          PR_TITLE='${{ github.event.pull_request.title }}'
          PR_AUTHOR='${{ github.event.pull_request.user.login }}'
          REVIEWER='${{ github.event.review.user.login }}'
          
          REVIEWER_DISCORD_ID='${{ env[github.event.review.user.login] }}'
          AUTHOR_DISCORD_ID='${{ env[github.event.pull_request.user.login] }}'
          
          PR_BODY='${{ github.event.pull_request.body }}'
          if [ "${{ env.PR_PREFIX }}" = 'BE' ]; then
            NOTIFY_ID=${{ env.backend }}
            WEBHOOK_URL=${{ secrets.DISCORD_BE_PR_WEBHOOK_URL }}
          else
            NOTIFY_ID=${{ env.frontend }}
            WEBHOOK_URL=${{ secrets.DISCORD_FE_PR_WEBHOOK_URL }}
          fi
          
          JSON_FILE=$(mktemp)
          cat > $JSON_FILE <<EOF
          {
            "content": "<@$AUTHOR_DISCORD_ID> PRÏóê Î¶¨Î∑∞Í∞Ä ÏûëÏÑ±ÎêêÏñ¥Ïöî üöÄ",
            "embeds": [
              {
                "author": {
                    "name": "$REVIEWER",
                    "icon_url": "https://github.com/$REVIEWER.png"
                },
                "title": "$PR_TITLE",
                "url": "$PR_URL",
                "color": 16777215,
                "footer": {
                  "text": "2024-review-me"
                },
                "fields": [
                  {
                    "name": "ÏûëÏÑ±Ïûê",
                    "value": "<@$AUTHOR_DISCORD_ID>",
                    "inline": true
                  }
                ],
                "timestamp": "$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
                }
              ]
            }
            EOF
            cat $JSON_FILE
            curl -X POST -H 'Content-type: application/json' \
            --data @$JSON_FILE \
            $WEBHOOK_URL
            rm $JSON_FILE
